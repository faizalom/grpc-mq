// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: proto/mq.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Topic   string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	EventId *string                `protobuf:"bytes,2,opt,name=eventId,proto3,oneof" json:"eventId,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*Message_Text
	//	*Message_Binary
	Content       isMessage_Content `protobuf_oneof:"content"`
	SenderId      string            `protobuf:"bytes,5,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Timestamp     int64             `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_proto_mq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_mq_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Message) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *Message) GetContent() isMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Message) GetText() string {
	if x != nil {
		if x, ok := x.Content.(*Message_Text); ok {
			return x.Text
		}
	}
	return ""
}

func (x *Message) GetBinary() []byte {
	if x != nil {
		if x, ok := x.Content.(*Message_Binary); ok {
			return x.Binary
		}
	}
	return nil
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type isMessage_Content interface {
	isMessage_Content()
}

type Message_Text struct {
	Text string `protobuf:"bytes,3,opt,name=text,proto3,oneof"` // For text-based messages
}

type Message_Binary struct {
	Binary []byte `protobuf:"bytes,4,opt,name=binary,proto3,oneof"` // For binary-based messages
}

func (*Message_Text) isMessage_Content() {}

func (*Message_Binary) isMessage_Content() {}

type SubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	SubscriberId  string                 `protobuf:"bytes,2,opt,name=subscriberId,proto3" json:"subscriberId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionRequest) Reset() {
	*x = SubscriptionRequest{}
	mi := &file_proto_mq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionRequest) ProtoMessage() {}

func (x *SubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionRequest.ProtoReflect.Descriptor instead.
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_mq_proto_rawDescGZIP(), []int{1}
}

func (x *SubscriptionRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SubscriptionRequest) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_proto_mq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_mq_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListTopicsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         *string                `protobuf:"bytes,1,opt,name=topic,proto3,oneof" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsRequest) Reset() {
	*x = ListTopicsRequest{}
	mi := &file_proto_mq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsRequest) ProtoMessage() {}

func (x *ListTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsRequest.ProtoReflect.Descriptor instead.
func (*ListTopicsRequest) Descriptor() ([]byte, []int) {
	return file_proto_mq_proto_rawDescGZIP(), []int{3}
}

func (x *ListTopicsRequest) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

type TopicInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	SubscriberIds []string               `protobuf:"bytes,2,rep,name=subscriberIds,proto3" json:"subscriberIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicInfo) Reset() {
	*x = TopicInfo{}
	mi := &file_proto_mq_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicInfo) ProtoMessage() {}

func (x *TopicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mq_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicInfo.ProtoReflect.Descriptor instead.
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return file_proto_mq_proto_rawDescGZIP(), []int{4}
}

func (x *TopicInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TopicInfo) GetSubscriberIds() []string {
	if x != nil {
		return x.SubscriberIds
	}
	return nil
}

type ListTopicsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []*TopicInfo           `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsReply) Reset() {
	*x = ListTopicsReply{}
	mi := &file_proto_mq_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsReply) ProtoMessage() {}

func (x *ListTopicsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mq_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsReply.ProtoReflect.Descriptor instead.
func (*ListTopicsReply) Descriptor() ([]byte, []int) {
	return file_proto_mq_proto_rawDescGZIP(), []int{5}
}

func (x *ListTopicsReply) GetTopics() []*TopicInfo {
	if x != nil {
		return x.Topics
	}
	return nil
}

var File_proto_mq_proto protoreflect.FileDescriptor

const file_proto_mq_proto_rawDesc = "" +
	"\n" +
	"\x0eproto/mq.proto\"\xbf\x01\n" +
	"\aMessage\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1d\n" +
	"\aeventId\x18\x02 \x01(\tH\x01R\aeventId\x88\x01\x01\x12\x14\n" +
	"\x04text\x18\x03 \x01(\tH\x00R\x04text\x12\x18\n" +
	"\x06binary\x18\x04 \x01(\fH\x00R\x06binary\x12\x1a\n" +
	"\bsenderId\x18\x05 \x01(\tR\bsenderId\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestampB\t\n" +
	"\acontentB\n" +
	"\n" +
	"\b_eventId\"O\n" +
	"\x13SubscriptionRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\"\n" +
	"\fsubscriberId\x18\x02 \x01(\tR\fsubscriberId\"$\n" +
	"\bResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"8\n" +
	"\x11ListTopicsRequest\x12\x19\n" +
	"\x05topic\x18\x01 \x01(\tH\x00R\x05topic\x88\x01\x01B\b\n" +
	"\x06_topic\"G\n" +
	"\tTopicInfo\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12$\n" +
	"\rsubscriberIds\x18\x02 \x03(\tR\rsubscriberIds\"5\n" +
	"\x0fListTopicsReply\x12\"\n" +
	"\x06topics\x18\x01 \x03(\v2\n" +
	".TopicInfoR\x06topics2\x92\x01\n" +
	"\rMessageBroker\x12\x1e\n" +
	"\aPublish\x12\b.Message\x1a\t.Response\x12-\n" +
	"\tSubscribe\x12\x14.SubscriptionRequest\x1a\b.Message0\x01\x122\n" +
	"\n" +
	"ListTopics\x12\x12.ListTopicsRequest\x1a\x10.ListTopicsReplyB#Z!github.com/faizalom/grpc-mq;protob\x06proto3"

var (
	file_proto_mq_proto_rawDescOnce sync.Once
	file_proto_mq_proto_rawDescData []byte
)

func file_proto_mq_proto_rawDescGZIP() []byte {
	file_proto_mq_proto_rawDescOnce.Do(func() {
		file_proto_mq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_mq_proto_rawDesc), len(file_proto_mq_proto_rawDesc)))
	})
	return file_proto_mq_proto_rawDescData
}

var file_proto_mq_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_mq_proto_goTypes = []any{
	(*Message)(nil),             // 0: Message
	(*SubscriptionRequest)(nil), // 1: SubscriptionRequest
	(*Response)(nil),            // 2: Response
	(*ListTopicsRequest)(nil),   // 3: ListTopicsRequest
	(*TopicInfo)(nil),           // 4: TopicInfo
	(*ListTopicsReply)(nil),     // 5: ListTopicsReply
}
var file_proto_mq_proto_depIdxs = []int32{
	4, // 0: ListTopicsReply.topics:type_name -> TopicInfo
	0, // 1: MessageBroker.Publish:input_type -> Message
	1, // 2: MessageBroker.Subscribe:input_type -> SubscriptionRequest
	3, // 3: MessageBroker.ListTopics:input_type -> ListTopicsRequest
	2, // 4: MessageBroker.Publish:output_type -> Response
	0, // 5: MessageBroker.Subscribe:output_type -> Message
	5, // 6: MessageBroker.ListTopics:output_type -> ListTopicsReply
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_mq_proto_init() }
func file_proto_mq_proto_init() {
	if File_proto_mq_proto != nil {
		return
	}
	file_proto_mq_proto_msgTypes[0].OneofWrappers = []any{
		(*Message_Text)(nil),
		(*Message_Binary)(nil),
	}
	file_proto_mq_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_mq_proto_rawDesc), len(file_proto_mq_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mq_proto_goTypes,
		DependencyIndexes: file_proto_mq_proto_depIdxs,
		MessageInfos:      file_proto_mq_proto_msgTypes,
	}.Build()
	File_proto_mq_proto = out.File
	file_proto_mq_proto_goTypes = nil
	file_proto_mq_proto_depIdxs = nil
}
